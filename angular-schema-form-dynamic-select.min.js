angular.module("schemaForm").run(["$templateCache",function(t){t.put("directives/decorators/bootstrap/strap/strapmultiselect.html",'<div class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-multiple="1" data-html="1" ng-options="item.value as (item.text == null ? item.name : item.text) for item in form.items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapmultiselectdynamic.html",'<div class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-controller="StrapSelectController" ng-init="fetchResult(form.options)"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder || (\'placeholders.select\')}}" data-multiple="1" data-html="1" ng-options="item.value as (item.text == null ? item.name : item.text) for item in items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselect.html",'<div class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder ||(\'placeholders.select\')}}" data-html="1" ng-options="item.value as (item.text == null ? item.name : item.text) for item in form.items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>'),t.put("directives/decorators/bootstrap/strap/strapselectdynamic.html",'<div class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="form-group {{form.fieldHtmlClass}}" ng-controller="StrapSelectController" ng-init="fetchResult(form.options)"><button type="button" class="btn btn-default" sf-changed="form" ng-model="$$value$$" schema-validate="form" data-placeholder="{{form.placeholder || form.schema.placeholder ||(\'placeholders.select\')}}" data-html="1" ng-options="item.value as (item.text == null ? item.name : item.text) for item in items" bs-select=""></button> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(t,e,s){var r=function(e,r,a){if("string"===r.type){var o=t.stdFormObj(e,r,a);return o.key=a.path,o.type="strapselect",a.lookup[s.stringify(a.path)]=o,o}};t.defaults.string.unshift(r);var a=function(e,r,a){if("array"===r.type){var o=t.stdFormObj(e,r,a);return o.key=a.path,o.type="strapmultiselect",a.lookup[s.stringify(a.path)]=o,o}};t.defaults.array.unshift(a);var o=function(e,r,a){if("string"===r.type){var o=t.stdFormObj(e,r,a);return o.key=a.path,o.type="strapselectdynamic",a.lookup[s.stringify(a.path)]=o,o}};t.defaults.string.unshift(o);var l=function(e,r,a){if("array"===r.type){var o=t.stdFormObj(e,r,a);return o.key=a.path,o.type="strapmultiselectdynamic",a.lookup[s.stringify(a.path)]=o,o}};t.defaults.array.unshift(l),e.addMapping("bootstrapDecorator","strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.createDirective("strapselect","directives/decorators/bootstrap/strap/strapselect.html"),e.addMapping("bootstrapDecorator","strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.createDirective("strapmultiselect","directives/decorators/bootstrap/strap/strapmultiselect.html"),e.addMapping("bootstrapDecorator","strapselectdynamic","directives/decorators/bootstrap/strap/strapselectdynamic.html"),e.createDirective("strapselectdynamic","directives/decorators/bootstrap/strap/strapselectdynamic.html"),e.addMapping("bootstrapDecorator","strapmultiselectdynamic","directives/decorators/bootstrap/strap/strapmultiselectdynamic.html"),e.createDirective("strapmultiselectdynamic","directives/decorators/bootstrap/strap/strapmultiselectdynamic.html")}]),angular.module("schemaForm").controller("StrapSelectController",["$scope","$http",function(t,e){t.items=[],t.fetchResult=function(s){if(s)if(s.callback)t.items=s.callback(s),console.log("items",t.items);else{if(s.http_post)return e.post(s.http_post.url,s.http_post.parameter).then(function(e){t.items=e.data,console.log("items",t.items)},function(t,e){alert("Loading select items failed (URL: '"+String(s.http_post.url)+"' Parameter: "+String(s.http_post.parameter)+"\nError: "+e)});if(s.http_get)return e.get(s.http_get.url,s.http_get.parameter).then(function(e){t.items=e.data,console.log("items",t.items)},function(t,e){alert("Loading select items failed (URL: '"+String(s.http_get.url)+"\nError: "+e)});if(s.async)return s.async.call(s).then(function(e){t.items=e.data,console.log("items",t.items)},function(t,e){alert("Loading select items failed(Options: '"+String(s)+"\nError: "+e)})}else console.log("StrapSelectController.fetchResult : No options set")}}]);